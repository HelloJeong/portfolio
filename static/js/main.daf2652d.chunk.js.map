{"version":3,"sources":["styles/common.ts","components/About.tsx","components/Contact.tsx","images/bg-header.jpg","components/HeaderSlider.tsx","components/Header.tsx","components/Nav.tsx","redux/modules/skill.ts","components/SkillItem.tsx","components/Skill.tsx","redux/modules/work.ts","components/WorkItem.tsx","components/Work.tsx","styles/theme.ts","App.tsx","redux/modules/index.ts","index.tsx"],"names":["StyledSection","styled","section","StyledH1","h1","props","theme","flexCenter","light","titleFontColor","StyledInner","div","StyledInnerColumnWrap","About","id","StyledParagraphWrap","StyledParagraph","href","rel","target","p","basicFontColor","Contact","StyledH3","h3","characters","HeaderSlider","counter","sliderRef","useRef","useState","selectedIndex","setSelectedIndex","useEffect","interval","setInterval","current","length","style","transition","transform","clearInterval","StyledSliderDiv","StyledItemDiv","ref","map","c","i","Header","setCounter","setTimeout","opacity","StyledHeader","StyledBG","StyledTextureBlock","header","bg","Nav","navRef","window","addEventListener","_","throttle","scrollY","classList","remove","add","StyledNav","StyledUl","StyledLi","nav","ul","li","navFontColor","GET_SKILL","SORT_PROGRESS","SORT_TYPE","initialState","skills","compareType","a","b","typeA","type","toUpperCase","typeB","reducer","state","action","skillFile","sort","progress","SkillItem","img","name","itemRef","value","src","alt","max","Skill","sortState","setSortState","useSelector","skill","dispatch","useDispatch","StyledSkillSection","onClick","StyledItemWrap","StyledItemList","idx","skillBackColor","GET_WORK","works","workFile","WorkItem","title","text","member","start_date","end_date","StyledImgWrap","StyledMember","StyledTextureWrap","StyledTitle","StyledSkillWrap","StyledSkill","StyledTerm","StyledText","span","h2","projectSkillBackColor","projectSkillColor","Work","work","StyledWorkSection","as","slice","reverse","projectBackColor","css","App","StyledApp","main","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daf2652d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n  display: flex;\n  box-sizing: border-box;\n  padding-top: 60px;\n  padding-bottom: 60px;\n`;\n\nexport const StyledH1 = styled.h1`\n  ${(props) => props.theme.flexCenter};\n  color: ${(props) => props.theme.light.titleFontColor};\n  font-size: 32px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;\n\nexport const StyledInner = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  width: 1440px;\n  padding-left: 30px;\n  padding-right: 30px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledInnerColumnWrap = styled(StyledInner)`\n  flex-direction: column;\n`;\n","import styled from \"styled-components\";\nimport { StyledH1, StyledInnerColumnWrap, StyledSection } from \"../styles/common\";\nimport { IAboutProps } from \"../type\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid, react/jsx-no-target-blank */\nconst About: React.FC<IAboutProps> = ({ id }) => {\n  return (\n    <StyledSection id={id}>\n      <StyledInnerColumnWrap>\n        <StyledH1>About</StyledH1>\n        <StyledParagraphWrap>\n          <StyledParagraph>MERN + TS 스택을 주로 사용하고 있습니다.</StyledParagraph>\n          <StyledParagraph>\n            항상 안전한 코드, 효율적인 코드를 작성하기 위해 노력하고 있습니다.\n          </StyledParagraph>\n          <StyledParagraph>잘 부탁드립니다.</StyledParagraph>\n          <StyledParagraph>\n            Github :{\" \"}\n            <a href=\"https://github.com/HelloJeong\" rel=\"noreferror\" target=\"_blank\">\n              https://github.com/HelloJeong\n            </a>\n          </StyledParagraph>\n          <StyledParagraph>\n            Velog :{\" \"}\n            <a href=\"https://velog.io/@jeongyk92\" rel=\"noreferror\" target=\"_blank\">\n              https://velog.io/@jeongyk92\n            </a>\n          </StyledParagraph>\n        </StyledParagraphWrap>\n      </StyledInnerColumnWrap>\n    </StyledSection>\n  );\n};\n\nexport default About;\n\nconst StyledParagraphWrap = styled.div`\n  ${(props) => props.theme.flexCenter};\n  flex-direction: column;\n  line-height: 1.5;\n  width: 100%;\n`;\n\nconst StyledParagraph = styled.p`\n  a {\n    text-decoration: underline;\n    color: ${(props) => props.theme.light.basicFontColor};\n  }\n`;\n","import styled from \"styled-components\";\nimport { StyledH1, StyledInnerColumnWrap, StyledSection } from \"../styles/common\";\nimport { IContactProps } from \"../type\";\n\nconst Contact: React.FC<IContactProps> = ({ id }) => {\n  return (\n    <StyledSection id={id}>\n      <StyledInnerColumnWrap>\n        <StyledH1>Contact</StyledH1>\n        <StyledH3>\n          Email : &nbsp; <a href=\"mailto:jeongyk92@gmail.com\">jeongyk92@gmail.com</a>\n        </StyledH3>\n      </StyledInnerColumnWrap>\n    </StyledSection>\n  );\n};\n\nexport default Contact;\n\nconst StyledH3 = styled.h3`\n  ${(props) => props.theme.flexCenter};\n  line-height: 1.5;\n  font-size: 20px;\n  font-weight: 700;\n  color: #000;\n  a {\n    color: #000;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/bg-header.e7f1eeee.jpg\";","import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { IHeaderSliderProps } from \"../type\";\n\nconst characters = [\"재치있는\", \"센스있는\", \"파급력있는\", \"세심한\"];\n\nconst HeaderSlider: React.FC<IHeaderSliderProps> = ({ counter }) => {\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = useState<number>(1);\n\n  useEffect(() => {\n    if (counter) {\n      // todo : 마지막 -> 0번으로 갈 때 2배 시간을 대기 후 1번째로 이동\n      const interval = setInterval(() => {\n        if (!sliderRef.current) {\n          return;\n        }\n        if (selectedIndex < characters.length + 1) {\n          setSelectedIndex(selectedIndex + 1);\n        } else {\n          setSelectedIndex(1);\n        }\n\n        if (selectedIndex === characters.length + 1) {\n          sliderRef.current.style.transition = `0s`;\n          sliderRef.current.style.transform = `translateY(0)`;\n        } else {\n          sliderRef.current.style.transition = `all 0.5s ease-in-out`;\n          sliderRef.current.style.transform = `translateY(-${selectedIndex}00%)`;\n        }\n      }, 1500);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [counter, selectedIndex]);\n\n  return (\n    <StyledSliderDiv>\n      <StyledItemDiv ref={sliderRef}>\n        {characters.map((c, i) => (\n          <StyledH1 key={`Slider${i}`}>{c}</StyledH1>\n        ))}\n        <StyledH1>{characters[0]}</StyledH1>\n      </StyledItemDiv>\n    </StyledSliderDiv>\n  );\n};\n\nexport default HeaderSlider;\n\nconst StyledSliderDiv = styled.div`\n  height: 70px;\n  overflow: hidden;\n`;\n\nconst StyledItemDiv = styled.div`\n  height: 100%;\n`;\n\nconst StyledH1 = styled.h1`\n  height: 60px;\n  ${(props) => props.theme.flexCenter};\n  margin-bottom: 10px;\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport bg from \"../images/bg-header.jpg\";\nimport { StyledInner } from \"../styles/common\";\nimport { IHeaderProps } from \"../type\";\nimport HeaderSlider from \"./HeaderSlider\";\n\nconst Header: React.FC<IHeaderProps> = ({ id }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [counter, setCounter] = useState<boolean>(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (!ref.current) {\n        return;\n      }\n      ref.current.style.opacity = \"1\";\n      setCounter((counter) => !counter);\n    }, 500);\n  }, []);\n\n  return (\n    <StyledHeader id={id}>\n      <StyledBG />\n      <StyledTextureBlock ref={ref}>\n        <HeaderSlider counter={counter} />\n        <StyledH1>Javascript Developer</StyledH1>\n        <StyledH1>정연광입니다.</StyledH1>\n      </StyledTextureBlock>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n\nconst StyledHeader = styled.header`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  ${(props) => props.theme.flexCenter};\n`;\n\nconst StyledBG = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${bg});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  /* opacity: 0.5; */\n`;\n\nconst StyledTextureBlock = styled(StyledInner)`\n  position: relative;\n  flex-direction: column;\n  font-size: 64px;\n  font-weight: 700;\n  gap: 16px;\n  color: #fff;\n  opacity: 0;\n  transition: 1s;\n`;\n\nconst StyledH1 = styled.h1`\n  height: 60px;\n  ${(props) => props.theme.flexCenter};\n`;\n","import { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid, no-script-url */\nconst Nav: React.FC = () => {\n  const navRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    window.addEventListener(\n      \"scroll\",\n      _.throttle(() => {\n        if (!navRef.current) {\n          return;\n        }\n        if (window.scrollY < 100) {\n          navRef.current.classList.remove(\"scroll\");\n        } else {\n          navRef.current.classList.add(\"scroll\");\n        }\n      }, 300)\n    );\n  }, []);\n  return (\n    <StyledNav ref={navRef}>\n      <StyledUl>\n        <StyledLi>\n          <a href=\"#Home\">Home</a>\n        </StyledLi>\n        <StyledLi>\n          <a href=\"#About\">About</a>\n        </StyledLi>\n        <StyledLi>\n          <a href=\"#Skill\">Skill</a>\n        </StyledLi>\n        <StyledLi>\n          <a href=\"#Work&Project\">Work&Project</a>\n        </StyledLi>\n        <StyledLi>\n          <a href=\"#Contact\">Contact</a>\n        </StyledLi>\n      </StyledUl>\n    </StyledNav>\n  );\n};\n\nexport default Nav;\n\nconst StyledNav = styled.nav`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 10;\n  width: 100%;\n  padding-right: 60px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: flex-end;\n  transition: 0.5s;\n  border-bottom: none;\n  background-color: transparent;\n\n  &.scroll {\n    border-bottom: 1px solid #b9b9b9;\n    background-color: #fff;\n    ul li a {\n      color: #5f5f5f;\n    }\n  }\n`;\n\nconst StyledUl = styled.ul`\n  width: 800px;\n  height: 60px;\n  display: flex;\n\n  li:first-child::before {\n    display: none;\n  }\n`;\n\nconst StyledLi = styled.li`\n  width: 100%;\n  height: 100%;\n  ${(props) => props.theme.flexCenter};\n\n  &::before {\n    content: \"|\";\n    margin: 0 15px;\n  }\n\n  a {\n    ${(props) => props.theme.flexCenter};\n    width: 100%;\n    height: 100%;\n    text-decoration: none;\n    color: ${(props) => props.theme.light.navFontColor};\n    font-size: 16px;\n  }\n`;\n","import skillFile from \"../../skilldata.json\";\nimport { ISkillState, ISkillType } from \"../../type\";\n// 액션 타입을 선언합니다\n// 뒤에 as const 를 붙여줌으로써 나중에 액션 객체를 만들게 action.type 의 값을 추론하는 과정에서\n// action.type 이 string 으로 추론되지 않고 'counter/INCREASE' 와 같이 실제 문자열 값으로 추론 되도록 해줍니다.\n\nconst GET_SKILL = \"skill/GET_SKILL\" as const;\nconst SORT_PROGRESS = \"skill/SORT_PROGRESS\" as const;\nconst SORT_TYPE = \"skill/SORT_TYPE\" as const;\n\nexport const getskill = () => ({ type: GET_SKILL });\nexport const sortProgress = () => ({ type: SORT_PROGRESS });\nexport const sortType = () => ({ type: SORT_TYPE });\n\n// 모든 액션 겍체들에 대한 타입을 준비해줍니다.\n// ReturnType<typeof _____> 는 특정 함수의 반환값을 추론해줍니다\n// 상단부에서 액션타입을 선언 할 떄 as const 를 하지 않으면 이 부분이 제대로 작동하지 않습니다.\ntype SkillAction =\n  | ReturnType<typeof getskill>\n  | ReturnType<typeof sortProgress>\n  | ReturnType<typeof sortType>;\n\nconst initialState: ISkillState = { skills: [] };\n\nfunction compareType(a: ISkillType, b: ISkillType): number {\n  const typeA = a.type.toUpperCase();\n  const typeB = b.type.toUpperCase();\n  if (typeA < typeB) {\n    return 1;\n  }\n  if (typeA > typeB) {\n    return -1;\n  }\n  return 0;\n}\n\nfunction reducer(state: ISkillState = initialState, action: SkillAction): ISkillState {\n  switch (action.type) {\n    case GET_SKILL:\n      const skillList: ISkillState = skillFile;\n      return skillList;\n    case SORT_PROGRESS:\n      return {\n        ...state,\n        skills: state.skills.sort((a, b) => b.progress - a.progress),\n      };\n    case SORT_TYPE:\n      return {\n        ...state,\n        skills: state.skills.sort(compareType),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { ISkillType } from \"../type\";\n\nconst SkillItem: React.FC<ISkillType> = ({ img, name, progress, type }) => {\n  const itemRef = useRef<HTMLProgressElement>(null);\n  useEffect(() => {\n    let value = 1;\n    const interval = setInterval(() => {\n      if (value === progress) {\n        clearInterval(interval);\n        return;\n      }\n      if (!itemRef.current) {\n        return;\n      }\n      itemRef.current.value = ++value;\n    }, 10);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [progress]);\n\n  return (\n    <StyledLi>\n      <img src={`./images/skill-${img}`} alt={name} />\n      <h3>{name}</h3>\n      <progress ref={itemRef} value=\"0\" max=\"100\" />\n    </StyledLi>\n  );\n};\n\nexport default SkillItem;\n\nconst StyledLi = styled.li`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  gap: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  img {\n    width: 50px;\n    height: 100%;\n    border-radius: 10px;\n  }\n  h3 {\n    width: 100px;\n    height: 100%;\n    font-weight: 700;\n    display: flex;\n    align-items: center;\n  }\n  progress {\n    display: block;\n    width: 400px;\n    height: 30px;\n    appearance: none;\n    border-radius: 10px;\n    color: ${(props) => props.theme.light.titleFontColor};\n\n    &::-webkit-progress-bar {\n      background-color: #eee;\n      border-radius: 10px;\n    }\n    &::-webkit-progress-value {\n      background-color: ${(props) => props.theme.light.titleFontColor};\n      border-radius: 8px;\n    }\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../redux/modules\";\nimport { getskill, sortProgress, sortType } from \"../redux/modules/skill\";\nimport { StyledH1, StyledInnerColumnWrap, StyledSection } from \"../styles/common\";\nimport { ISkillProps } from \"../type\";\nimport SkillItem from \"./SkillItem\";\n\nconst Skill: React.FC<ISkillProps> = ({ id }) => {\n  const [sortState, setSortState] = useState<boolean>(false); // t : 주제, f : 수치\n\n  const skills = useSelector((state: RootState) => state.skill.skills);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getskill());\n  }, [dispatch]);\n\n  return (\n    <StyledSkillSection id={id}>\n      <StyledInnerColumnWrap>\n        <StyledH1>Skill</StyledH1>\n        <StyledH3>- 현재 {sortState ? \"주제\" : \"수치\"}별 정렬 상태 -</StyledH3>\n        <StyledH3>\n          <button onClick={onClickSort}>정렬 바꾸기</button>\n        </StyledH3>\n        <StyledItemWrap>\n          <StyledItemList>\n            {skills.map((skill, idx) => {\n              return <SkillItem key={`skill${idx}`} {...skill} />;\n            })}\n          </StyledItemList>\n        </StyledItemWrap>\n      </StyledInnerColumnWrap>\n    </StyledSkillSection>\n  );\n\n  function onClickSort() {\n    if (sortState) {\n      // 수치로 변경\n      dispatch(sortProgress());\n    } else {\n      // 주제로 변경\n      dispatch(sortType());\n    }\n    setSortState(!sortState);\n  }\n};\n\nexport default Skill;\n\nconst StyledSkillSection = styled(StyledSection)`\n  background-color: ${(props) => props.theme.light.skillBackColor};\n`;\n\nconst StyledH3 = styled.h3`\n  ${(props) => props.theme.flexCenter};\n  color: ${(props) => props.theme.light.titleFontColor};\n  font-size: 20px;\n  margin-bottom: 30px;\n\n  button {\n    box-sizing: border-box;\n    cursor: pointer;\n    outline: none;\n    border: 1px solid #404040;\n    border-radius: 10px;\n    padding: 10px;\n    background-color: transparent;\n    font-size: 16px;\n    color: ${(props) => props.theme.light.titleFontColor};\n    transition: 0.3s;\n\n    &:hover {\n      color: #000000;\n      background-color: #fff;\n    }\n  }\n`;\n\nconst StyledItemWrap = styled.div`\n  ${(props) => props.theme.flexCenter};\n`;\n\nconst StyledItemList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n","import workFile from \"../../workdata.json\";\nimport { IWorkState } from \"../../type\";\n\nconst GET_WORK = \"work/GET_WORK\" as const;\n\nexport const getwork = () => ({ type: GET_WORK });\n\n// 모든 액션 겍체들에 대한 타입을 준비해줍니다.\n// ReturnType<typeof _____> 는 특정 함수의 반환값을 추론해줍니다\n// 상단부에서 액션타입을 선언 할 떄 as const 를 하지 않으면 이 부분이 제대로 작동하지 않습니다.\ntype WorkAction = ReturnType<typeof getwork>;\n\nconst initialState: IWorkState = { works: [] };\n\nfunction reducer(state: IWorkState = initialState, action: WorkAction): IWorkState {\n  switch (action.type) {\n    case GET_WORK:\n      const skillList: IWorkState = workFile;\n      return skillList;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import styled from \"styled-components\";\nimport { IWorkType } from \"../type\";\n\nconst WorkItem: React.FC<IWorkType> = ({\n  img,\n  title,\n  text,\n  skills,\n  member,\n  start_date,\n  end_date,\n}) => {\n  return (\n    <StyledLi>\n      <StyledImgWrap>\n        <img src={`./images/project-${img}`} alt={title} />\n        <StyledMember>{member}인</StyledMember>\n      </StyledImgWrap>\n      <StyledTextureWrap>\n        <StyledTitle>{title}</StyledTitle>\n        <StyledSkillWrap>\n          {skills.map((skill, idx) => (\n            <StyledSkill key={`${title}-${idx}`}>{skill}</StyledSkill>\n          ))}\n        </StyledSkillWrap>\n        <StyledTerm>{`${start_date} ~ ${end_date}`}</StyledTerm>\n        <StyledText>{text}</StyledText>\n      </StyledTextureWrap>\n    </StyledLi>\n  );\n};\n\nexport default WorkItem;\n\nconst StyledLi = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  background-color: #fff;\n\n  width: 400px;\n  min-height: 500px;\n  border-radius: 10px;\n  overflow: hidden;\n  padding-bottom: 20px;\n`;\n\nconst StyledImgWrap = styled.div`\n  height: 300px;\n  position: relative;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst StyledMember = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  background-color: #fff;\n  padding: 10px;\n  border: 1px solid ${(props) => props.theme.light.basicFontColor};\n  border-radius: 10px;\n`;\n\nconst StyledTextureWrap = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTitle = styled.h2`\n  width: 100%;\n  height: 50px;\n  ${(props) => props.theme.flexCenter};\n  font-size: 20px;\n  font-weight: 700;\n  border-bottom: 1px solid ${(props) => props.theme.light.basicFontColor};\n`;\n\nconst StyledSkillWrap = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  padding: 10px;\n  word-break: keep-all;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst StyledSkill = styled.span`\n  font-size: 14px;\n  padding: 5px;\n  border-radius: 20px;\n  margin: 5px;\n  background: ${(props) => props.theme.light.projectSkillBackColor};\n  color: ${(props) => props.theme.light.projectSkillColor};\n  word-break: keep-all;\n`;\n\nconst StyledTerm = styled.h3`\n  width: 100%;\n  height: 30px;\n  box-sizing: border-box;\n  padding-right: 10px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst StyledText = styled.text`\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0 10px;\n  line-height: 1.5;\n  word-break: keep-all;\n  white-space: pre-line;\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../redux/modules\";\nimport { getwork } from \"../redux/modules/work\";\nimport { StyledH1, StyledInnerColumnWrap, StyledSection } from \"../styles/common\";\nimport { IWorkProps } from \"../type\";\nimport WorkItem from \"./WorkItem\";\n\nconst Work: React.FC<IWorkProps> = ({ id }) => {\n  const works = useSelector((state: RootState) => state.work.works);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getwork());\n  }, [dispatch]);\n\n  return (\n    <StyledWorkSection id={id}>\n      <StyledInnerColumnWrap>\n        <StyledH1>Work&amp;Project</StyledH1>\n        <StyledItemWrap>\n          <StyledItemList as=\"ul\">\n            {works\n              .slice(0)\n              .reverse()\n              .map((work, idx) => {\n                return <WorkItem key={`work${idx}`} {...work} />;\n              })}\n          </StyledItemList>\n        </StyledItemWrap>\n      </StyledInnerColumnWrap>\n    </StyledWorkSection>\n  );\n};\n\nexport default Work;\n\nconst StyledWorkSection = styled(StyledSection)`\n  background-color: ${(props) => props.theme.light.projectBackColor};\n`;\n\nconst StyledItemWrap = styled.div`\n  ${(props) => props.theme.flexCenter};\n  margin-bottom: 30px;\n`;\n\nconst StyledItemList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n`;\n","import { css, DefaultTheme } from \"styled-components\";\n\nconst theme: DefaultTheme = {\n  light: {\n    basicFontColor: \"#606060\",\n    navFontColor: \"#b9b9b9\",\n    titleFontColor: \"#5f5f5f\",\n    skillBackColor: \"#c4c4c4\",\n    projectBackColor: \"#ffb2b2\",\n    projectSkillBackColor: \"#ffebca\",\n    projectSkillColor: \"#794b3c\",\n  },\n  flexCenter: css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `,\n};\n\nexport default theme;\n","import styled, { ThemeProvider } from \"styled-components\";\n\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport Skill from \"./components/Skill\";\nimport Work from \"./components/Work\";\nimport theme from \"./styles/theme\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <StyledApp>\n        <Header id=\"Home\" />\n        <Nav />\n        <About id=\"About\" />\n        <Skill id=\"Skill\" />\n        <Work id=\"Work&Project\" />\n        <Contact id=\"Contact\" />\n      </StyledApp>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\nconst StyledApp = styled.main`\n  position: relative;\n`;\n","import { combineReducers } from \"redux\";\nimport skill from \"./skill\";\nimport work from \"./work\";\n\nconst rootReducer = combineReducers({\n  skill,\n  work,\n});\n\nexport default rootReducer;\n\n// 루트 리듀서의 반환값를 유추해줍니다\n// 추후 이 타입을 컨테이너 컴포넌트에서 불러와서 사용해야 하므로 내보내줍니다.\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport rootReducer from \"./redux/modules\";\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}